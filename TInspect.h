// -*- C++ -*- generated by wxGlade 0.4.1 on Fri Aug 18 13:20:07 2006

#include <wx/wx.h>
#include <wx/image.h>
#include <wx/plotctrl/plotctrl.h>
#include "TConstants.h"
#include "TWeightThread.h"
// forward declaration
class TFile;

#ifndef TINSPECT_H
#define TINSPECT_H

#include <wx/spinbutt.h>


class TInspect: public wxDialog {
public:
    // begin wxGlade: TInspect::ids
    // end wxGlade

    TInspect(wxWindow* parent, int id, const wxString& title, const wxPoint& pos=wxDefaultPosition, const wxSize& size=wxDefaultSize, long style=wxDEFAULT_FRAME_STYLE);
    void FormShow         ();
    void DrawPaint        (wxPaintEvent &event);
    void NextChannelClick (wxSpinEvent &event);
    void PrevChannelClick (wxSpinEvent &event);
    void NextFileClick    (wxSpinEvent &event);
    void PrevFileClick    (wxSpinEvent &event);
    void XASClick         (wxCommandEvent &event);
    void UnzoomClick      (wxCommandEvent &event);
    void WeightClick      (wxSpinEvent &event);
    void WeightUpClick    (wxSpinEvent &event);
    void WeightDownClick  (wxSpinEvent &event);
    void Form_Create       ();
    void FormResize       (wxCommandEvent &event);
   /* void DrawMouseDown    (Button: TMouseButton; Shift: TShiftState;
                                X, Y: Double);
	void DrawMouseUp      (Button: TMouseButton; Shift: TShiftState;
                                X, Y: Double);
    void DrawDblClick     (wxCommandEvent &event);*/
    void UseClick         (wxCommandEvent &event);
    void RecalculateClick (wxCommandEvent &event);
    void WSchemeClick     (wxCommandEvent &event);
    void ChangeE0Click    (wxCommandEvent &event);
    void OKClick          (wxCommandEvent &event);
    void BackgroundClick  (wxCommandEvent &event);
    void DataColorClick   (wxCommandEvent &event);
	void setChannel (int C);
	void setObj(TFile * myobj);
	void setUF(bool nUF);

private:
    // begin wxGlade: TInspect::methods
    void set_properties();
    void do_layout();
    void do_initialise();

    // end wxGlade
    TFile * lObj;
    WData * lCoData;

    int lChannel;
    int loChannel;
    bool lcChannel;
    bool lUF;
    bool loUF;
    double lWmax;
    int lWCount;
    double lE0;
    double lOrder;
    double lEmax;
    double loEmax;
    double lEmaxlimit;

    TWeightNoThread * lCal;
    int lCalPending;

    int lWScheme;
    double lWscaled;
    double lWabs;
    bool unzoom;  //If set, should unzoom when drawing

    // lButton:     TMouseButton;
    // lButtonDown: Boolean;
    // lXButton:    Double;
    // lYButton:    Double;

    wxGenericColour lDataColour;   //colour of individual channels
	wxGenericColour AveDataColour; //colour of average
	int line_width;                //width of lines on plot

    WData * Data (TFile *Obj, int C);
    int Channels (TFile *Obj);
    bool ChangeData (int DFile, int DChannel);
    WData * NextData (TFile ** cObj, int & cChannel,int DChannel); // cObj/cChannel are 'var'

    void showWeight();
	void ReDraw();
    bool drawXAS (int Mode);
    bool drawXAFS (int Mode);

    void setlEmax (double E);
    void setlE0 (double E);
    void getE0();

    void Calculate (int Mo);
    void CalDone (WData *D);
    // void CalEnd (wxCommandEvent &event);
    void CalEnd();

  /*published
    property Obj:             TFile    read  lObj
                                       write lObj;*/
	
	TFile * getObj();
    //property Channel:         Integer  read  lChannel
    //                                   write setlChannel;
	int getChannel();
    // property UF:              Boolean  read  lUF
    //                                   write lUF;
    // property Emax:            Double   read  lEmax
    //                                   write setlEmax;
    //property E0:              Double   read  lE0
    //                                   write setlE0;
    //end; */

protected:
    // begin wxGlade: TInspect::attributes
    wxButton* unzoom_button;
    wxStaticText* label_1;
    wxStaticText* label_2;
    wxSpinButton* weight_spin_button;
    wxPlotCtrl * draw_pane;
    wxPlotData curve_data;
    wxPlotData average_data;
    wxPlotMarker emax_mark;
    wxSpinButton* next_channel_spin;
    wxSpinButton* next_file_spin;
    wxCheckBox* checkbox_xas;
    wxCheckBox* checkbox_use;
    wxButton* help_button;
    wxButton* ok_button;
    wxStatusBar* Inspect_statusbar;
    // popup menu
    wxMenu* popup_menu;
    DECLARE_EVENT_TABLE()
};

// Menu item enumeration
enum {
	menu_wt_uniform=200,
	menu_wt_counts,
	menu_wt_deviation,
	menu_wt_noise,
	menu_recalculate,
	menu_wt_constnoise,
	menu_changee0,
	menu_datacolour,
	menu_backcolour
};

enum {file_spin=300,
	  channel_spin,
	  weight_spin,
	  zoom_button,
	  xas_check,
	  use_check
};
#include "tfile.h"
#endif // TINSPECT_H
